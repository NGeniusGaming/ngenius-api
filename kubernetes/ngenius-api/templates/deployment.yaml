apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ngenius-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: "50%"
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "ngenius-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        com.ngeniusgaming/commit-sha: {{ .Values.sha }}
      labels:
        {{- include "ngenius-api.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "ngenius-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag  }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: TWITCH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: twitch-credentials
                  key: twitch-client-id
            - name: TWITCH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: twitch-credentials
                  key: twitch-client-secret
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        # the root filesystem is read only, so we must mount /tmp
        - name: tmp
          emptyDir: { }
